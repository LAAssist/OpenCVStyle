for DEBUG 2.4.6 version

opencv_core246d.lib
opencv_imgproc246d.lib
opencv_highgui246d.lib
opencv_ml246d.lib
opencv_video246d.lib
opencv_features2d246d.lib
opencv_calib3d246d.lib
opencv_objdetect246d.lib
opencv_contrib246d.lib
opencv_legacy246d.lib
opencv_flann246d.lib
opencv_gpu246d.lib
opencv_haartraining_engined.lib
opencv_nonfree246d.lib
opencv_ocl246d.lib
opencv_photo246d.lib
opencv_videostab246d.lib
opencv_stitching249d.lib
opencv_superres249d.lib
opencv_ts249d.lib

for RELEASE of 2.4.6 version

opencv_core249.lib
opencv_imgproc249.lib
opencv_highgui249.lib
opencv_ml249.lib
opencv_video249.lib
opencv_features2d249.lib
opencv_calib3d249.lib
opencv_objdetect249.lib
opencv_contrib249.lib
opencv_legacy249.lib
opencv_flann249.lib
opencv_gpu249.lib
opencv_haartraining_engine.lib
opencv_nonfree249.lib
opencv_ocl249.lib
opencv_photo249.lib
opencv_videostab249.lib
opencv_stitching249.lib
opencv_superres249.lib
opencv_ts249.lib




program


#include <iostream>
#include "opencv2\opencv.hpp"

using namespace cv;
using namespace std;

int main( int argc, char** argv )
{
    	if( argc < 2)
    	{
     		cout <<" less number of arguments" << endl;
     		return -1;
    	}
	Mat image = imread(argv[1],1);
	if(!image.data)
	{
		cout<<"could not load image"<<endl;
		return -1;
	}
	namedWindow("Image",CV_WINDOW_NORMAL|CV_WINDOW_KEEPRATIO);
	imshow("Image",image);

	waitKey(0);
	return 0;
}
